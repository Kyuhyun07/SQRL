% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qrismb.R
\name{qrismb}
\alias{qrismb}
\title{Estimate a quantile regression estimator of residual lifetime from survival data}
\usage{
qrismb(Z, nc, covariate, D, t_0 = 0, Q = 0.5, ne = 100, init, method)
}
\arguments{
\item{Z}{is a vector of observed time, which is minimum of failure time and censored time}

\item{nc}{is a number of covariates used in analysis}

\item{covariate}{is a matrix of covariate (# row = # of subject, # of column = # of covariate(nc))}

\item{D}{is a vector of censoring indicator (1 = not censored, 0 = censored)}

\item{t_0}{is the followup time(or basetime of analysis)}

\item{Q}{is the quantile}

\item{ne}{is number of multiplier bootstrapping for V matrix estimation}

\item{init}{is option for initial guess of regression parameter ("random" assumes all coefficients as random numbers, "one" assumes all coefficients as 1s, otherwise a solution from rq function)}

\item{method}{is option how to estimate coefficient and standard error of it
("nonsmooth" uses non-smooth estimating equation : L1-minimization method in coefficient estimation, and full multiplier bootstrap in standard error estimation.
(otherwise uses induced smoothed estimating equation : nonlinear equation solver in coefficient estimation and partial multiplier bootstrap in standard error estimation).}
}
\value{
An object of class "\code{qrismb}" representing the fit.
The \code{qrismb} object is a list containing at least the following components:
\describe{
  \item{coefficient}{a vector of point estimates}
  \item{stderr}{a vector of standard error of point estiamtes}
  }
}
\description{
Using two estimation methods
1. L1-minimization(non-smooth estimating equation)
2. Induced smoothing approach (smooth estimating equation)
}
\examples{
data("retinopathy")
reti = retinopathy
reti_rev = reti
reti_rev$risk = rescale(reti$risk, to=c(0,1), from=c(0,12))
reti_rev$type = as.numeric(reti$type)-1
reti_rev$typextrt = reti_rev$type*reti$trt
Z=reti_rev$futime
nc=5
covariate=as.matrix(reti_rev[,c(9,4,5,6,10)])
D=reti_rev$status
t_0=1
Q=0.25
ne=200
qrismb(Z, nc, covariate, D, t_0, Q, ne, "rq", "smooth")
qrismb(Z, nc, covariate, D, t_0, Q, ne, "random", "nonsmooth")
Induce smoothing estimating equation, adopted from rev_is_objectF()
Induce smoothing estimating equation, adopted from Amat
}
